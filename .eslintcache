[{"C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\index.js":"1","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\App.js":"2","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\reportWebVitals.js":"3","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\Hoc\\global-objects.js":"4","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\Hoc\\shared\\multiplyFunction.js":"5","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\components\\Ui\\Input\\input.js":"6","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\components\\Ui\\Button\\Button.js":"7","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\components\\Ui\\Titles\\Titles.js":"8"},{"size":500,"mtime":1612014555168,"results":"9","hashOfConfig":"10"},{"size":8662,"mtime":1612140357298,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":5240,"mtime":1612139135340,"results":"13","hashOfConfig":"10"},{"size":7884,"mtime":1612137767336,"results":"14","hashOfConfig":"10"},{"size":3623,"mtime":1612029142433,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1612005241817,"results":"16","hashOfConfig":"10"},{"size":488,"mtime":1612006025952,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gyds6a",{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\index.js",[],"C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\App.js",["37","38","39","40","41","42","43"],"C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\reportWebVitals.js",[],"C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\Hoc\\global-objects.js",[],["44","45"],"C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\Hoc\\shared\\multiplyFunction.js",["46","47","48","49"],"\r\n\r\nexport const checkValidity=(value, controls, id,  countryList)=>{\r\nif(id==='expiryDate'){\r\n    let today = new Date();\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = yyyy+mm+dd;\r\n\r\nfor(let i=0; i<value.length;i++){\r\n    if(value[i]==='-'){\r\n        value=value.slice(0, i)+value.slice(i+1, value.length);\r\n    }\r\n   \r\n}\r\nif(value>=today){\r\n   \r\n    return true;\r\n}else{\r\n    return false\r\n}\r\n\r\n}\r\nif(controls.hasOwnProperty('dataForShipping')){\r\n    if(controls['dataForShipping'].value===true){\r\n        if(id==='shippingCountry'|| id==='shippingCity' ||id=== 'shippingAddress' || id==='shippingPostalCode' ){\r\n            return true;\r\n        }\r\n    }\r\n}\r\n    \r\n\r\nif(id==='card'){\r\n\r\n let cardType= creditCardType(value);\r\n if(cardType){\r\n    return cardType;\r\n }\r\n}\r\n\r\n    if(id==='country' || id==='shippingCountry'){\r\n        for(let key in countryList){\r\n            if(countryList[key].name === value){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    if(id==='postalCode' || id==='shippingPostalCode'){\r\n        let code;\r\n        for(let key in countryList){\r\n        if(controls.country.value){\r\n            let country;\r\n            id==='postalCode'?country='country':country='shippingCountry'\r\n            if( countryList[key].name===controls[country].value){\r\n                let postalCodes=countryList[key].postalCode;\r\n                let found = postalCodes.find(element => element == value);\r\n                if(found){\r\n                    code=true;\r\n                }\r\n            }\r\n        }else{\r\n            let postalCodes=countryList[key].postalCode;\r\n            let found = postalCodes.find(element => element == value);\r\n            if(found){\r\n                code=true;\r\n            }\r\n          \r\n        } \r\n    }\r\n        return code;\r\n    }\r\n\r\n\r\n  if(id==='repeatPassword' ){\r\n      if(controls['password'].value.length>0){\r\n          if(controls['password'].value===value){\r\n              return true\r\n          }else{\r\n              return false\r\n          }\r\n      } else{\r\n          return true\r\n      } \r\n  }\r\n  \r\n  \r\nif(id==='firstName' || id==='lastName'  || id==='city' || id==='address'   || id==='shippingAddress' || id==='shippingCity'  || id==='password' || id==='repeatPassword' || id==='cardName' || id==='cvc' ){\r\n    \r\n        if( value.length <= controls[id].rules.max && value.length>=controls[id].rules.min ){\r\n            return true;\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n    if(id === 'email'){ \r\n        if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value)){\r\n            if(value.length<=controls[id].rules.min || value.length>= controls[id].rules.max){\r\n                return(false)\r\n            } else{\r\n                return(true)\r\n            }\r\n         \r\n        }else{\r\n            return false\r\n        }\r\n      \r\n    }\r\n\r\n}\r\nexport const updateObject = (oldObject, updatedValues)=>{\r\n    return{\r\n        ...oldObject,\r\n        ...updatedValues\r\n\r\n    };\r\n};\r\nexport  const changedValueHandler = (controls, controlName, event, countryList)=>{\r\n\r\n    let updateControl;\r\n    let value=event.target.value;\r\n \r\n    if(controlName === 'cvc' || controlName==='card'){\r\n   if(controlName==='card'){\r\n   if(event.nativeEvent.inputType !== 'deleteContentBackward'){\r\n       if(value.length === 4 || value.length===9 || value.length===14 || value.length===19  || value.length===24) {\r\n        value=value+' '\r\n\r\n        }\r\n   }\r\n   }\r\n\r\n   for(let i=0; i<=value.length; i++){\r\n\r\n    if(value.charCodeAt(i)<48  ||  value.charCodeAt(i)>58){\r\n        if(value.charCodeAt(i)===32){\r\n            if(i === 4 || i ===9 || i ===14 || i===19 || i===24 ){\r\n\r\n            }else{\r\n                value=value.slice(0, i)+value.slice(i+1, value.length);\r\n            }\r\n          \r\n        }else{\r\n            value=value.slice(0, i)+value.slice(i+1, value.length);\r\n        }\r\n      \r\n        \r\n\r\n    }\r\n   }\r\n\r\n   }\r\n\r\n\r\n\r\n    if(controls[controlName].elementType === 'checkbox' ){\r\n     controls[controlName].value?value=false:value=true\r\n    };\r\n\r\n\r\n    \r\n \r\n  \r\n  updateControl = updateObject(controls, {...controls,\r\n    [controlName]: updateObject(controls[controlName],{\r\n       value: value,\r\n       valide: checkValidity(value, controls, controlName, countryList)\r\n     })\r\n  });\r\n\r\n  if(controls.hasOwnProperty('dataForShipping')){\r\n  if(controls['dataForShipping'].value===true){\r\n    if(controlName==='country'||controlName==='city'||controlName==='address'||controlName==='postalCode'){\r\n        let change;\r\n        if(controlName==='country'){\r\n            change='shippingCountry';\r\n        }else if (controlName==='city'){\r\n            change='shippingCity';    \r\n        }else if(controlName==='address'){\r\n            change='shippingAddress'\r\n        }else if(controlName==='postalCode'){\r\n            change='shippingPostalCode'\r\n        }\r\n        let checked=upt(updateControl, change, value)\r\n        updateControl=checked;\r\n    }\r\n    \r\n}\r\n}\r\n\r\nif(controlName==='country' && controls['postalCode'].value ){\r\n         updateControl = updateObject(updateControl, {...updateControl,\r\n             ['postalCode']: updateObject(controls['postalCode'], {\r\n                 value: updateControl['postalCode'].value,\r\n                valide: checkValidity(updateControl['postalCode'].value, updateControl,'postalCode', countryList)\r\n              })\r\n           })\r\n }\r\n\r\n\r\n if(controlName==='shippingCountry' && controls['shippingPostalCode'].value ){\r\n    updateControl = updateObject(updateControl, {...updateControl,\r\n        ['shippingPostalCode']: updateObject(controls['shippingPostalCode'], {\r\n            value: updateControl['shippingPostalCode'].value,\r\n           valide: checkValidity(updateControl['shippingPostalCode'].value, updateControl,'shippingPostalCode', countryList)\r\n         })\r\n      })\r\n}\r\n\r\n\r\n\r\n if(controlName==='password'){\r\n\r\n\r\n     if(updateControl['repeatPassword'].value.length>0){\r\n        let checked=upt(updateControl, 'repeatPassword', ''  )\r\n        updateControl=checked;\r\n     }\r\n   \r\n  }\r\n  \r\n \r\n  \r\n\r\n  return updateControl;\r\n  \r\n  }\r\n  \r\n  export const upt =(controls, controlName, event, countryList)=>{\r\n    \r\n  let  upt = updateObject(controls, {...controls,\r\n    [controlName]: updateObject(controls[controlName], {\r\n        value: event,\r\n        valide: checkValidity(controls[controlName].value, controls, controlName, countryList)\r\n     })\r\n  })\r\n  return upt;\r\n  };\r\n\r\n\r\n  export const creditCardType=(dd) =>{\r\n    var cc = dd.split(' ').join('');\r\n    let amex = new RegExp('^3[47][0-9]{13}$');\r\n    let visa = new RegExp('^4[0-9]{12}(?:[0-9]{3})?$');\r\n    let cup1 = new RegExp('^62[0-9]{14}[0-9]*$');\r\n    let cup2 = new RegExp('^81[0-9]{14}[0-9]*$');\r\n   \r\n    let mastercard = new RegExp('^5[1-5][0-9]{14}$');\r\n    let mastercard2 = new RegExp('^2[2-7][0-9]{14}$');\r\n   \r\n    let disco1 = new RegExp('^6011[0-9]{12}[0-9]*$');\r\n    let disco2 = new RegExp('^62[24568][0-9]{13}[0-9]*$');\r\n    let disco3 = new RegExp('^6[45][0-9]{14}[0-9]*$');\r\n    \r\n    let diners = new RegExp('^3[0689][0-9]{12}[0-9]*$');\r\n    let jcb =  new RegExp('^35[0-9]{14}[0-9]*$');\r\n   \r\n   \r\n    if (visa.test(cc)) {\r\n    \r\n      return 'VISA';\r\n    }\r\n    if (amex.test(cc)) {\r\n      \r\n      return 'AMEX';\r\n    }\r\n    if (mastercard.test(cc) || mastercard2.test(cc)) {\r\n       \r\n\r\n      return 'MASTERCARD';\r\n    }\r\n    if (disco1.test(cc) || disco2.test(cc) || disco3.test(cc)) {\r\n    \r\n      return 'DISCOVER';\r\n    }\r\n    if (diners.test(cc)) {\r\n      return 'DINERS';\r\n    }\r\n    if (jcb.test(cc)) {\r\n   \r\n      return 'JCB';\r\n    }\r\n    if (cup1.test(cc) || cup2.test(cc)) {\r\n      return 'CHINA_UNION_PAY';\r\n    }\r\n    return undefined;\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\components\\Ui\\Input\\input.js",["50","51"],"import React from 'react';\r\nimport styles from'./input.module.css';\r\nimport {FaCcMastercard} from  'react-icons/fa';\r\nconst input=(props)=>{\r\n    let disable;\r\n    let typeCard='';\r\n    if(props.disable){\r\n        if(props.id==='shippingCity' || props.id==='shippingCountry' || props.id==='shippingAddress'|| props.id==='shippingPostalCode'){\r\n            disable=true;\r\n          }\r\n    }\r\nif(props.id==='card'){\r\n    console.log('5406610000784574');\r\n    typeCard=<span className={styles.cardType}> {props.valide} </span>\r\n}\r\n    let inputElement = null;\r\n    let text;\r\n    let inputClasses=[styles.inputElement];\r\n    if(props.invalid){\r\n        inputClasses=[styles.invalid];\r\n        text=<span className={styles.textForInvalid}>Please check your information and try again for activation Next step </span>\r\n    }\r\n    if(props.elementConfig.type==='checkbox'){\r\n        text=null;\r\n        inputClasses=[styles.checkBox]\r\n    }\r\n    if(props.elementConfig.type==='radio'){\r\n      \r\n        text=null;\r\n        inputClasses=[styles.radio]\r\n    }\r\n\r\n    if(props.elementType==='select'){\r\n        inputClasses=[styles.select]\r\n    }\r\n        if(props.elementType==='select'){\r\n            if(props.invalid){\r\n                inputClasses=[styles.selectInvalid]\r\n                text=<span className={styles.textForInvalid}>Please check your information and try again for activation Next step </span>\r\n            }else{\r\n                inputClasses=[styles.select];\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    switch (props.elementType) {\r\n        case('input'):\r\n            inputElement = <div className={styles.round}><input\r\n           disabled={disable}\r\n                onChange={props.changed}\r\n                className={inputClasses}\r\n                {...props.elementConfig}\r\n                value={props.value}/>\r\n             \r\n                 </div>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = <select\r\n            disabled={disable}\r\n                className={inputClasses}\r\n                value={props.value}\r\n                onChange={props.changed}\r\n            >\r\n                <option value='1'>{props.id==='shippingCountry'?\"Choose sipping Country \":\"Please choose your country...\"}</option>\r\n                {props.elementConfig.options.map( option=>(\r\n                        <option key={option.value} value={option.value}> {option.value} </option>\r\n                    )\r\n                )}\r\n            </select>;\r\n            break;\r\n        case('checkbox'):\r\n            inputElement = <input\r\n            \r\n                type='checkbox'\r\n                defaultChecked={props.value}\r\n                onChange={props.changed}\r\n                className={inputElement}\r\n                />;\r\n            break;\r\n            case('radio'):\r\n            inputElement = <input\r\n                type='checkbox'\r\n                defaultChecked={props.value}\r\n                onChange={props.changed}\r\n                className={inputElement}\r\n                />;\r\n        default:\r\n            inputElement=<input\r\n                onChange={props.changed}\r\n                className={inputClasses}\r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n    }\r\n    let label=null;\r\n       if(props.label ){\r\n       label=\r\n\t    <label  className=\"label\">\r\n\t\t\t{props.label}\r\n\t\t</label>\r\n          \r\n       \r\n       }\r\n       \r\n      \r\n    \r\n    return(\r\n        <div className={styles.Input}>\r\n            {text}\r\n            {inputElement}\r\n            {typeCard}\r\n            {label}\r\n        </div>\r\n    );\r\n\r\n\r\n};\r\nexport default input;","C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\components\\Ui\\Button\\Button.js",[],"C:\\Users\\Mery\\Desktop\\task-form-WA\\src\\components\\Ui\\Titles\\Titles.js",[],{"ruleId":"52","severity":1,"message":"53","line":52,"column":7,"nodeType":"54","messageId":"55","endLine":65,"endColumn":8},{"ruleId":"56","severity":1,"message":"57","line":73,"column":171,"nodeType":"58","messageId":"59","endLine":73,"endColumn":181},{"ruleId":"60","severity":1,"message":"61","line":80,"column":11,"nodeType":"62","messageId":"63","endLine":80,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":82,"column":7,"nodeType":"54","messageId":"55","endLine":184,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":88,"column":52,"nodeType":"66","messageId":"67","endLine":88,"endColumn":54},{"ruleId":"64","severity":1,"message":"65","line":88,"column":96,"nodeType":"66","messageId":"67","endLine":88,"endColumn":98},{"ruleId":"52","severity":1,"message":"53","line":203,"column":2,"nodeType":"54","messageId":"55","endLine":219,"endColumn":3},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":58,"column":65,"nodeType":"74","messageId":"59","endLine":58,"endColumn":67},{"ruleId":"72","severity":1,"message":"73","line":65,"column":61,"nodeType":"74","messageId":"59","endLine":65,"endColumn":63},{"ruleId":"75","severity":1,"message":"76","line":194,"column":14,"nodeType":"77","messageId":"78","endLine":197,"endColumn":17,"fix":"79"},{"ruleId":"75","severity":1,"message":"80","line":204,"column":9,"nodeType":"77","messageId":"78","endLine":207,"endColumn":12,"fix":"81"},{"ruleId":"60","severity":1,"message":"82","line":3,"column":9,"nodeType":"62","messageId":"63","endLine":3,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":88,"column":9,"nodeType":"85","messageId":"86","endLine":93,"endColumn":40},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-dupe-keys","Duplicate key 'successful'.","ObjectExpression","unexpected","no-unused-vars","'successful' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-useless-computed-key","Unnecessarily computed property ['postalCode'] found.","Property","unnecessarilyComputedProperty",{"range":"89","text":"90"},"Unnecessarily computed property ['shippingPostalCode'] found.",{"range":"91","text":"92"},"'FaCcMastercard' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation",[5289,5303],"'postalCode'",[5717,5739],"'shippingPostalCode'"]